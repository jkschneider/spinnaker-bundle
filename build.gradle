buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		jcenter()
		maven { url "http://dl.bintray.com/spinnaker/gradle" }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath 'com.netflix.spinnaker.gradle:spinnaker-gradle-project:4.0.0'
		classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE"
	}
}

plugins {
	id 'java'
	id 'application'
}

apply plugin: 'spinnaker.project'
apply plugin: 'org.springframework.boot'

spinnaker {
	dependenciesVersion = project.findProperty('spinnakerDependenciesVersion') ?: '0.125.0'
}

group = 'io.pivotal.spinnaker'
version = '0.0.1-SNAPSHOT'

mainClassName = 'io.pivotal.spinnaker.SpinnakerBundle'

repositories {
	mavenLocal()

	jcenter()
	mavenCentral()
	maven { url 'https://spinnaker.bintray.com/spinnaker' }

	// for gate's dependency on spring-security-saml-dsl
	maven { url 'https://repo.spring.io/libs-milestone' }
}

dependencies {
	compile 'org.apache.thrift:libthrift:0.9.1'
	compile 'com.netflix.hystrix:hystrix-javanica:1.4.21'

	gradle.ext.spinnakerProjects.each { project ->
		compile("com.netflix.spinnaker.$project:$project-web:latest.release")
	}
}

configurations.all {
	exclude group: 'org.mortbay.jetty', module: 'servlet-api'
	exclude group: 'javax.servlet', module: 'servlet-api'
	exclude group: 'com.netflix.spinnaker.kork', module: 'kork-hystrix'

	resolutionStrategy {
		force 'com.google.guava:guava:16.0.1'
		eachDependency {
			if (it.requested.group == "asm" || it.requested.group == "org.ow2.asm") {
				it.useTarget group: "org.ow2.asm", name: "asm-all", version: "5.0.4"
			}
			if (it.requested.group == "cglib" || it.requested.name == "cglib") {
				it.useTarget group: "cglib", name: "cglib", version: "3.1"
			}
			if (it.requested.group == "org.apache.xbean") {
				it.useVersion "4.4"
			}
		}
	}
}

task printClasspath {
	doLast {
		configurations.runtime.resolvedConfiguration.files
				.findAll { it.name.endsWith('.jar') }
				.collect { it.name.substring(0, it.name.length() - 4) }
				.sort()
				.unique()
				.each { println(it) }
	}
}